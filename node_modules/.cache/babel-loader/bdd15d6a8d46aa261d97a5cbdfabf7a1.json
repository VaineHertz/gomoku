{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\washy\\\\Documents\\\\GitHub\\\\gomoku\\\\gomoku\\\\src\\\\canvas.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { emptyBoard } from './board.js';\nlet pOneScore = 0;\nlet pTwoScore = 0;\nlet pOneTurn = 'white';\nlet inputLock = false;\n\nfunction resetBoard() {\n  const board = emptyBoard();\n\n  for (let i = 0; i < 15; i++) {\n    board.grid.push([]);\n\n    for (let j = 0; j < 15; j++) {\n      board.grid[i].push(`   `);\n    }\n  }\n\n  board.pieces.white.push([0, 0, true]);\n  board.pieces.black.push([0, 0, true]); //above fake true pieces trigger the turn to flip, so I set the turn to white\n\n  board.pieces.turn = 'white';\n  return board;\n} //initialize a 15x15 board\n\n\nlet board = resetBoard();\n\nconst promptName = () => {\n  window.prompt(\"Enter name for Player 1\");\n  window.prompt(\"Enter name for Player 2\");\n};\n\nconst Canvas = props => {\n  const canvasRef = useRef(null);\n\n  const getClickPos = (canvas, event) => {\n    if (board.pieces.turn === 'black') board.pieces.black.push([event.offsetX, event.offsetY, false]);else if (board.pieces.turn === 'white') board.pieces.white.push([event.offsetX, event.offsetY, false]);\n  };\n\n  const draw = ctx => {\n    /* padding */\n    const p = ctx.canvas.height / 80;\n    /* set grid to 97% of canvas */\n\n    const cW = ctx.canvas.width * 0.97;\n    const cH = ctx.canvas.height * 0.97;\n    ctx.clearRect(p, p, cW + p, cH + p);\n    ctx.beginPath();\n    /* draw a 15x15 grid*/\n\n    for (let i = 0; i <= 480; i += 32) {\n      /* horizontal lines */\n      ctx.moveTo(0.5 + i + p, p);\n      ctx.lineTo(0.5 + i + p, cH + p);\n    }\n\n    for (let i = 0; i <= 480; i += 32) {\n      /* vertical lines */\n      ctx.moveTo(p, 0.5 + i + p);\n      ctx.lineTo(cW + p, 0.5 + i + p);\n    }\n    /* use black lines for the grid */\n\n\n    ctx.strokeStyle = \"black\";\n    ctx.stroke();\n    /* iterate through every tile */\n\n    for (let x = 23; x < 480; x += 32) {\n      for (let y = 23; y < 480; y += 32) {\n        /* draw white pieces */\n        for (let i in board.pieces.white) {\n          let clickX = board.pieces.white[i][0];\n          let clickY = board.pieces.white[i][1];\n\n          if (clickX > x - 16 && clickX < x + 16 && clickY > y - 16 && clickY < y + 16) {\n            if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"   \") {\n              drawPiece(ctx, 'white', x, y, true);\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"WHT\";\n              board.pieces.white[i][2] = true;\n            } else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"WHT\") {\n              drawPiece(ctx, 'white', x, y);\n            }\n          }\n        }\n        /* draw black pieces */\n\n\n        for (let i in board.pieces.black) {\n          let clickX = board.pieces.black[i][0];\n          let clickY = board.pieces.black[i][1];\n\n          if (clickX > x - 16 && clickX < x + 16 && clickY > y - 16 && clickY < y + 16) {\n            if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"   \") {\n              drawPiece(ctx, 'black', x, y, true);\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLK\";\n              board.pieces.black[i][2] = true;\n            } else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"BLK\") {\n              drawPiece(ctx, 'black', x, y);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function drawPiece(ctx, color, x, y, placed) {\n    ctx.beginPath();\n    ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\n    ctx.fillStyle = color;\n    ctx.fill();\n    placed ? ctx.lineWidth = 3 : ctx.lineWidth = 1;\n    ctx.strokeStyle = color === 'white' ? 'black' : 'white';\n    ctx.stroke();\n    ctx.lineWidth = 1;\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    draw(context);\n    /* OFFER DRAW BUTTON */\n\n    document.getElementById(\"draw\").onclick = () => {\n      if (window.confirm(\"Accept draw?\")) addScore('none');\n    };\n    /* RESIGN BUTTON */\n\n\n    document.getElementById(\"resign\").onclick = () => {\n      if (window.confirm(\"Are you sure you want to resign?\")) board.pieces.turn === 'white' ? addScore('BLK') : addScore('WHT');\n    };\n    /* NEW GAME BUTTON */\n\n\n    document.getElementById(\"newGame\").onclick = () => {\n      board = resetBoard();\n      board.pieces.turn = 'black';\n      draw(context);\n      document.getElementById('whosturn').innerText = \"It is black's turn\";\n      document.getElementById(\"newGame\").style.visibility = 'hidden';\n      inputLock = false;\n    };\n\n    function addScore(color) {\n      draw(context);\n      let pWinner = 'undefined';\n\n      if (color === 'BLK' && pOneTurn === 'black') {\n        pOneScore++;\n        pWinner = 'Player 1';\n      } else if (color === 'BLK' && pOneTurn !== 'black') {\n        pTwoScore++;\n        pWinner = 'Player 2';\n      } else if (color === 'WHT' && pOneTurn !== 'black') {\n        pOneScore++;\n        pWinner = 'Player 1';\n      } else if (color === 'WHT' && pOneTurn === 'black') {\n        pTwoScore++;\n        pWinner = 'Player 2';\n      }\n\n      inputLock = true;\n      document.getElementById(\"newGame\").style.visibility = 'visible';\n      document.getElementById(\"whosturn\").innerText = 'Game over';\n      setTimeout(() => {\n        if (pWinner === 'Player 1' || pWinner === 'Player 2') window.alert(`${pWinner} wins!`);\n        pOneTurn === 'black' ? pOneTurn = 'white' : pOneTurn = 'black';\n        document.getElementById(\"score\").innerText = `P1 (${pOneTurn}) ${pOneScore} - ${pTwoScore} (${pOneTurn === 'black' ? 'white' : 'black'}) P2`;\n      }, 50);\n    }\n\n    canvas.addEventListener('mousedown', e => {\n      if (!inputLock) {\n        getClickPos(canvas, e);\n        draw(context);\n\n        if ('Fold /* print grid array to console */') {\n          let gridString = \"\";\n\n          for (let y = 0; y < 15; y++) {\n            gridString += \"\\n\";\n\n            for (let x = 0; x < 15; x++) {\n              gridString += `${x + 1},${y + 1}[${board.grid[x][y]}]`;\n            }\n          }\n\n          console.log(gridString);\n        }\n        /* WIN CODITIONS\r\n        ----------------\r\n        horizontal check to see if 5 in a row has been achieved */\n\n\n        for (let x = 0; x < 11; x++) {\n          for (let y = 0; y < 15; y++) {\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT') {\n              /* horizontal 5 */\n              if (board.grid[x][y] === board.grid[x + 1][y] && board.grid[x][y] === board.grid[x + 2][y] && board.grid[x][y] === board.grid[x + 3][y] && board.grid[x][y] === board.grid[x + 4][y]) addScore(board.grid[x][y]);\n            }\n          }\n        }\n        /* vertical 5 check */\n\n\n        for (let x = 0; x < 15; x++) {\n          for (let y = 0; y < 11; y++) {\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT') {\n              if (board.grid[x][y] === board.grid[x][y + 1] && board.grid[x][y] === board.grid[x][y + 2] && board.grid[x][y] === board.grid[x][y + 3] && board.grid[x][y] === board.grid[x][y + 4]) addScore(board.grid[x][y]);\n            }\n          }\n        }\n        /* descending diagonal 5 check */\n\n\n        for (let x = 0; x < 11; x++) {\n          for (let y = 0; y < 11; y++) {\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT') {\n              if (board.grid[x][y] === board.grid[x + 1][y + 1] && board.grid[x][y] === board.grid[x + 2][y + 2] && board.grid[x][y] === board.grid[x + 3][y + 3] && board.grid[x][y] === board.grid[x + 4][y + 4]) addScore(board.grid[x][y]);\n            }\n          }\n        }\n        /* ascending diagonal 5 */\n\n\n        for (let x = 0; x < 11; x++) {\n          for (let y = 4; y < 15; y++) {\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT') {\n              if (board.grid[x][y] === board.grid[x + 1][y - 1] && board.grid[x][y] === board.grid[x + 2][y - 2] && board.grid[x][y] === board.grid[x + 3][y - 3] && board.grid[x][y] === board.grid[x + 4][y - 4]) addScore(board.grid[x][y]);\n            }\n          }\n        }\n        /* check to see if a player has finished turn by \r\n        placing a true piece */\n\n\n        if (board.pieces.black[board.pieces.black.length - 1][2] && board.pieces.white[board.pieces.white.length - 1][2] && !inputLock) {\n          if (board.pieces.turn === 'black') {\n            board.pieces.turn = 'white';\n            document.getElementById('whosturn').innerText = \"It is white's turn\";\n          } else if (board.pieces.turn === 'white') {\n            board.pieces.turn = 'black';\n            document.getElementById('whosturn').innerText = \"It is black's turn\";\n          }\n\n          console.log(`${board.pieces.turn}'s turn`);\n        }\n      }\n    });\n  }, [draw]);\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport { Canvas, promptName, board };","map":{"version":3,"sources":["C:/Users/washy/Documents/GitHub/gomoku/gomoku/src/canvas.js"],"names":["React","useRef","useEffect","emptyBoard","pOneScore","pTwoScore","pOneTurn","inputLock","resetBoard","board","i","grid","push","j","pieces","white","black","turn","promptName","window","prompt","Canvas","props","canvasRef","getClickPos","canvas","event","offsetX","offsetY","draw","ctx","p","height","cW","width","cH","clearRect","beginPath","moveTo","lineTo","strokeStyle","stroke","x","y","clickX","clickY","Math","round","drawPiece","color","placed","arc","PI","fillStyle","fill","lineWidth","current","context","getContext","document","getElementById","onclick","confirm","addScore","innerText","style","visibility","pWinner","setTimeout","alert","addEventListener","e","gridString","console","log","length"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react';\r\nimport {emptyBoard} from './board.js';\r\n\r\nlet pOneScore = 0;\r\nlet pTwoScore = 0;\r\nlet pOneTurn = 'white'\r\nlet inputLock = false;\r\n\r\nfunction resetBoard(){\r\n  const board = emptyBoard();\r\n  for (let i = 0; i < 15; i++){\r\n    board.grid.push([])\r\n    for (let j = 0; j < 15; j++){\r\n    board.grid[i].push(`   `)\r\n    }\r\n  }\r\n  board.pieces.white.push([0,0,true]);\r\n  board.pieces.black.push([0,0,true]);\r\n  //above fake true pieces trigger the turn to flip, so I set the turn to white\r\n  board.pieces.turn = 'white';\r\n  return board;\r\n}\r\n\r\n//initialize a 15x15 board\r\nlet board = resetBoard();\r\n\r\nconst promptName = () => {\r\n  window.prompt(\"Enter name for Player 1\");\r\n  window.prompt(\"Enter name for Player 2\");\r\n}\r\n\r\nconst Canvas = props => {\r\n  const canvasRef = useRef(null);\r\n  \r\n  const getClickPos = (canvas, event) => {\r\n    if (board.pieces.turn === 'black')\r\n      board.pieces.black.push([event.offsetX, event.offsetY, false]);\r\n    else if (board.pieces.turn === 'white')\r\n      board.pieces.white.push([event.offsetX, event.offsetY, false]);\r\n  }\r\n\r\n  const draw = ctx => {\r\n    /* padding */\r\n    const p = ctx.canvas.height / 80;\r\n    /* set grid to 97% of canvas */\r\n    const cW = ctx.canvas.width * 0.97;\r\n    const cH = ctx.canvas.height * 0.97;\r\n    \r\n    ctx.clearRect(p, p, cW+p, cH+p)\r\n\r\n    ctx.beginPath();\r\n    /* draw a 15x15 grid*/\r\n    for (let i = 0; i <= 480; i += 32){\r\n      /* horizontal lines */\r\n      ctx.moveTo(0.5 + i + p, p);\r\n      ctx.lineTo(0.5 + i + p, cH + p)\r\n    }\r\n    for (let i = 0; i <= 480; i += 32) {\r\n      /* vertical lines */\r\n      ctx.moveTo(p, 0.5 + i + p);\r\n      ctx.lineTo(cW + p, 0.5 + i + p);\r\n    }\r\n    /* use black lines for the grid */\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.stroke()\r\n\r\n    /* iterate through every tile */\r\n    for (let x = 23; x < 480; x += 32){\r\n      for (let y = 23; y < 480; y += 32){\r\n        /* draw white pieces */\r\n        for (let i in board.pieces.white){\r\n          let clickX = board.pieces.white[i][0];\r\n          let clickY = board.pieces.white[i][1];\r\n          if (clickX > x - 16 && clickX < x + 16 &&\r\n          clickY > y - 16 && clickY < y + 16){\r\n            if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"   \"){\r\n              drawPiece(ctx, 'white', x, y, true)\r\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"WHT\";\r\n              board.pieces.white[i][2] = true;\r\n            }\r\n            else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"WHT\"){\r\n              drawPiece(ctx, 'white', x, y)\r\n            }\r\n          }\r\n        }\r\n\r\n        /* draw black pieces */\r\n        for (let i in board.pieces.black){\r\n          let clickX = board.pieces.black[i][0];\r\n          let clickY = board.pieces.black[i][1];\r\n          if (clickX > x - 16 && clickX < x + 16\r\n            && clickY > y - 16 && clickY < y + 16){\r\n            if(board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"   \"){\r\n              drawPiece(ctx, 'black', x, y, true)\r\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLK\";\r\n              board.pieces.black[i][2] = true;\r\n            }\r\n            else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"BLK\"){\r\n              drawPiece(ctx, 'black', x, y)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function drawPiece(ctx, color, x, y, placed){\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n    placed ? ctx.lineWidth = 3 : ctx.lineWidth = 1;\r\n    ctx.strokeStyle = color === 'white' ? 'black' : 'white';\r\n    ctx.stroke();\r\n    ctx.lineWidth = 1;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    draw(context);\r\n\r\n    /* OFFER DRAW BUTTON */\r\n    document.getElementById(\"draw\").onclick = () => {\r\n      if (window.confirm(\"Accept draw?\"))\r\n        addScore('none')\r\n    }\r\n\r\n    /* RESIGN BUTTON */\r\n    document.getElementById(\"resign\").onclick = () => {\r\n      if (window.confirm(\"Are you sure you want to resign?\"))\r\n        board.pieces.turn === 'white' ? addScore('BLK') : addScore('WHT');\r\n    }\r\n\r\n    /* NEW GAME BUTTON */\r\n    document.getElementById(\"newGame\").onclick = () => {\r\n      board = resetBoard();\r\n      board.pieces.turn = 'black';\r\n      draw(context);\r\n      document.getElementById('whosturn').innerText = \"It is black's turn\";\r\n      document.getElementById(\"newGame\").style.visibility = 'hidden';\r\n      inputLock = false;\r\n    }\r\n\r\n    function addScore(color){\r\n      draw(context);\r\n      let pWinner = 'undefined';\r\n      if (color === 'BLK' && pOneTurn === 'black'){\r\n        pOneScore++;\r\n        pWinner = 'Player 1'\r\n      }\r\n      else if (color === 'BLK' && pOneTurn !== 'black'){\r\n        pTwoScore++;\r\n        pWinner = 'Player 2'\r\n      }\r\n      else if (color === 'WHT' && pOneTurn !== 'black'){\r\n        pOneScore++;\r\n        pWinner = 'Player 1'\r\n      }\r\n      else if (color === 'WHT' && pOneTurn === 'black'){\r\n        pTwoScore++\r\n        pWinner = 'Player 2'\r\n      }\r\n      inputLock = true;\r\n      document.getElementById(\"newGame\").style.visibility = 'visible';\r\n      document.getElementById(\"whosturn\").innerText = 'Game over'\r\n      setTimeout(() => {\r\n          if (pWinner === 'Player 1' || pWinner === 'Player 2')\r\n            window.alert(`${pWinner} wins!`)\r\n          pOneTurn === 'black' ? pOneTurn = 'white' : pOneTurn = 'black';\r\n          document.getElementById(\"score\").innerText = `P1 (${pOneTurn}) ${pOneScore} - ${pTwoScore} (${pOneTurn === 'black' ? 'white' : 'black'}) P2`;\r\n        }, 50)\r\n    }\r\n\r\n    canvas.addEventListener('mousedown', (e) => {\r\n      \r\n      if (!inputLock){\r\n        getClickPos(canvas, e);\r\n  \r\n        draw(context)\r\n        if ('Fold /* print grid array to console */'){\r\n          let gridString = \"\";\r\n          for (let y = 0; y < 15; y++){\r\n            gridString += \"\\n\"\r\n            for (let x = 0; x < 15; x++){\r\n              gridString += `${x + 1},${y + 1}[${board.grid[x][y]}]`\r\n            }\r\n          }\r\n          console.log(gridString)\r\n        }\r\n        /* WIN CODITIONS\r\n        ----------------\r\n        horizontal check to see if 5 in a row has been achieved */\r\n        for (let x = 0; x < 11; x++){\r\n          for (let y = 0; y < 15; y++){\r\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT'){\r\n              /* horizontal 5 */\r\n              if(board.grid[x][y] === board.grid[x + 1][y] &&\r\n                board.grid[x][y] === board.grid[x + 2][y] &&\r\n                board.grid[x][y] === board.grid[x + 3][y] &&\r\n                board.grid[x][y] === board.grid[x + 4][y])\r\n                  addScore(board.grid[x][y])\r\n            }\r\n          }\r\n        }\r\n        /* vertical 5 check */\r\n        for (let x = 0; x < 15; x++){\r\n          for (let y = 0; y < 11; y++){\r\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT'){\r\n              if(board.grid[x][y] === board.grid[x][y + 1] &&\r\n                board.grid[x][y] === board.grid[x][y + 2] &&\r\n                board.grid[x][y] === board.grid[x][y + 3] &&\r\n                board.grid[x][y] === board.grid[x][y + 4])\r\n                  addScore(board.grid[x][y])\r\n            }\r\n          }\r\n        }\r\n        /* descending diagonal 5 check */\r\n        for (let x = 0; x < 11; x++){\r\n          for (let y = 0; y < 11; y++){\r\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT'){\r\n              if(board.grid[x][y] === board.grid[x + 1][y + 1] &&\r\n                board.grid[x][y] === board.grid[x + 2][y + 2] &&\r\n                board.grid[x][y] === board.grid[x + 3][y + 3] &&\r\n                board.grid[x][y] === board.grid[x + 4][y + 4])\r\n                  addScore(board.grid[x][y])\r\n            }\r\n          }\r\n        }\r\n        /* ascending diagonal 5 */\r\n        for (let x = 0; x < 11; x++){\r\n          for (let y = 4; y < 15; y++){\r\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT'){\r\n              if(board.grid[x][y] === board.grid[x + 1][y - 1] &&\r\n                board.grid[x][y] === board.grid[x + 2][y - 2] &&\r\n                board.grid[x][y] === board.grid[x + 3][y - 3] &&\r\n                board.grid[x][y] === board.grid[x + 4][y - 4])\r\n                  addScore(board.grid[x][y])\r\n            }\r\n          }\r\n        }\r\n  \r\n        /* check to see if a player has finished turn by \r\n        placing a true piece */\r\n        if (board.pieces.black[board.pieces.black.length - 1][2] &&\r\n          board.pieces.white[board.pieces.white.length - 1][2] &&\r\n          !inputLock){\r\n          if (board.pieces.turn === 'black'){\r\n              board.pieces.turn = 'white'\r\n              document.getElementById('whosturn').innerText = \"It is white's turn\";\r\n          }\r\n          else if (board.pieces.turn === 'white'){\r\n              board.pieces.turn = 'black'\r\n              document.getElementById('whosturn').innerText = \"It is black's turn\";  \r\n          }\r\n          console.log(`${board.pieces.turn}'s turn`)\r\n        }\r\n      }\r\n    })\r\n  }, [draw])\r\n  \r\n  return <canvas ref={canvasRef} {...props}/>\r\n}\r\n\r\nexport {Canvas, promptName, board};"]},"metadata":{},"sourceType":"module"}