{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\washy\\\\Documents\\\\GitHub\\\\gomoku\\\\gomoku\\\\src\\\\canvas.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { emptyBoard } from './board.js';\n\nfunction resetBoard() {\n  const board = emptyBoard();\n\n  for (let i = 0; i < 15; i++) {\n    board.grid.push([]);\n\n    for (let j = 0; j < 15; j++) {\n      board.grid[i].push(`   `);\n    }\n  }\n\n  board.pieces.white.push([0, 0, true]);\n  board.pieces.black.push([0, 0, true]);\n  console.log(board);\n  return board;\n} //initialize a 15x15 board\n\n\nlet board = resetBoard();\n\nconst Canvas = props => {\n  const canvasRef = useRef(null);\n\n  const getClickPos = (canvas, event) => {\n    if (board.pieces.turn == 'black') board.pieces.black.push([event.offsetX, event.offsetY, false]);else if (board.pieces.turn == 'white') board.pieces.white.push([event.offsetX, event.offsetY, false]);\n  };\n\n  const draw = ctx => {\n    /* padding */\n    const p = ctx.canvas.height / 80;\n    /* set grid to 97% of canvas */\n\n    const cW = ctx.canvas.width * 0.97;\n    const cH = ctx.canvas.height * 0.97;\n    ctx.clearRect(p, p, cW + p, cH + p);\n    ctx.beginPath();\n    /* draw a 15x15 grid*/\n\n    for (let i = 0; i <= 480; i += 32) {\n      /* horizontal lines */\n      ctx.moveTo(0.5 + i + p, p);\n      ctx.lineTo(0.5 + i + p, cH + p);\n    }\n\n    for (let i = 0; i <= 480; i += 32) {\n      /* vertical lines */\n      ctx.moveTo(p, 0.5 + i + p);\n      ctx.lineTo(cW + p, 0.5 + i + p);\n    }\n    /* use black lines for the grid */\n\n\n    ctx.strokeStyle = \"black\";\n    ctx.stroke();\n    /* iterate through every tile */\n\n    for (let x = 23; x < 480; x += 32) {\n      for (let y = 23; y < 480; y += 32) {\n        /* draw white pieces */\n        for (let i in board.pieces.white) {\n          let clickX = board.pieces.white[i][0];\n          let clickY = board.pieces.white[i][1];\n\n          if (clickX > x - 16 && clickX < x + 16 && clickY > y - 16 && clickY < y + 16 && board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] != \"BLK\") {\n            drawPiece(ctx, 'white', x, y);\n            board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"WHT\";\n            board.pieces.white[i][2] = true;\n          }\n        }\n        /* draw black pieces */\n\n\n        for (let i in board.pieces.black) {\n          let clickX = board.pieces.black[i][0];\n          let clickY = board.pieces.black[i][1];\n\n          if (clickX > x - 16 && clickX < x + 16 && clickY > y - 16 && clickY < y + 16 && board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] != \"WHT\") {\n            drawPiece(ctx, 'black', x, y);\n            board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLK\";\n            board.pieces.black[i][2] = true;\n          }\n        }\n      }\n    }\n  };\n\n  function drawPiece(ctx, color, x, y) {\n    ctx.beginPath();\n    ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\n    ctx.fillStyle = color;\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = color == 'white' ? 'black' : 'white';\n    ctx.stroke();\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    draw(context);\n\n    document.getElementById(\"draw\").onclick = () => {\n      if (window.confirm(\"Accept draw?\")) {\n        console.log(\"Resetting\");\n        board = resetBoard();\n        draw(context);\n        console.log(board);\n      }\n    };\n\n    document.getElementById(\"resign\").onclick = () => {\n      if (window.confirm(\"Are you sure you want to resign?\")) {\n        console.log(\"Resetting\");\n        board = resetBoard();\n        draw(context);\n        console.log(board);\n      }\n    };\n\n    document.getElementById(\"score\").innerText = `BLACK: 0 WHITE 0`;\n    canvas.addEventListener('mousedown', e => {\n      getClickPos(canvas, e);\n      draw(context);\n      /* print grid array to console */\n\n      let gridString = \"\";\n\n      for (let y = 0; y < 15; y++) {\n        gridString += \"\\n\";\n\n        for (let x = 0; x < 15; x++) {\n          gridString += `${x + 1},${y + 1}[${board.grid[x][y]}]`;\n        }\n      }\n\n      console.log(gridString);\n      /* check to see if 5 in a row has been achieved */\n\n      for (let x = 0; x < 11; x++) {\n        for (let y = 0; y < 15; y++) {\n          if (board.grid[x][y] == 'BLK' || board.grid[x][y] == 'WHT') {\n            /* check for a horizontal 5 */\n            if (board.grid[x][y] == board.grid[x + 1][y] && board.grid[x][y] == board.grid[x + 2][y] && board.grid[x][y] == board.grid[x + 3][y] && board.grid[x][y] == board.grid[x + 4][y]) {\n              console.log(\"WINNERWINNERWINNERWINNERWINNER\");\n            }\n          }\n        }\n      }\n      /* check to see if a player has finished turn by \r\n      placing a true piece */\n\n\n      console.log('black ' + board.pieces.black[board.pieces.black.length - 1][2]);\n      console.log('white ' + board.pieces.white[board.pieces.white.length - 1][2]);\n\n      if (board.pieces.black[board.pieces.black.length - 1][2] && board.pieces.white[board.pieces.white.length - 1][2]) {\n        if (board.pieces.turn == 'black') {\n          board.pieces.turn = 'white';\n          document.getElementById('whosturn').innerText = \"It is white's turn\";\n        } else if (board.pieces.turn == 'white') {\n          board.pieces.turn = 'black';\n          document.getElementById('whosturn').innerText = \"It is black's turn\";\n        }\n\n        console.log(`${board.pieces.turn}'s turn`);\n      }\n    });\n  }, [draw]);\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport { Canvas, board };","map":{"version":3,"sources":["C:/Users/washy/Documents/GitHub/gomoku/gomoku/src/canvas.js"],"names":["React","useRef","useEffect","emptyBoard","resetBoard","board","i","grid","push","j","pieces","white","black","console","log","Canvas","props","canvasRef","getClickPos","canvas","event","turn","offsetX","offsetY","draw","ctx","p","height","cW","width","cH","clearRect","beginPath","moveTo","lineTo","strokeStyle","stroke","x","y","clickX","clickY","Math","round","drawPiece","color","arc","PI","fillStyle","fill","lineWidth","current","context","getContext","document","getElementById","onclick","window","confirm","innerText","addEventListener","e","gridString","length"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react';\r\nimport {emptyBoard} from './board.js';\r\n\r\nfunction resetBoard(){\r\n  const board = emptyBoard();\r\n  for (let i = 0; i < 15; i++){\r\n    board.grid.push([])\r\n    for (let j = 0; j < 15; j++){\r\n    board.grid[i].push(`   `)\r\n    }\r\n  }\r\n  board.pieces.white.push([0,0,true]);\r\n  board.pieces.black.push([0,0,true]);\r\n  console.log(board);\r\n  return board;\r\n}\r\n\r\n//initialize a 15x15 board\r\nlet board = resetBoard();\r\n\r\nconst Canvas = props => {\r\n    const canvasRef = useRef(null);\r\n  \r\n    const getClickPos = (canvas, event) => {\r\n      if (board.pieces.turn == 'black')\r\n        board.pieces.black.push([event.offsetX, event.offsetY, false]);\r\n      else if (board.pieces.turn == 'white')\r\n        board.pieces.white.push([event.offsetX, event.offsetY, false]);\r\n    }\r\n  \r\n    const draw = ctx => {\r\n      /* padding */\r\n      const p = ctx.canvas.height / 80;\r\n      /* set grid to 97% of canvas */\r\n      const cW = ctx.canvas.width * 0.97;\r\n      const cH = ctx.canvas.height * 0.97;\r\n      \r\n      ctx.clearRect(p, p, cW+p, cH+p)\r\n\r\n      ctx.beginPath();\r\n      /* draw a 15x15 grid*/\r\n      for (let i = 0; i <= 480; i += 32){\r\n        /* horizontal lines */\r\n        ctx.moveTo(0.5 + i + p, p);\r\n        ctx.lineTo(0.5 + i + p, cH + p)\r\n      }\r\n      for (let i = 0; i <= 480; i += 32) {\r\n        /* vertical lines */\r\n        ctx.moveTo(p, 0.5 + i + p);\r\n        ctx.lineTo(cW + p, 0.5 + i + p);\r\n      }\r\n      /* use black lines for the grid */\r\n      ctx.strokeStyle = \"black\";\r\n      ctx.stroke()\r\n\r\n      /* iterate through every tile */\r\n      for (let x = 23; x < 480; x += 32){\r\n        for (let y = 23; y < 480; y += 32){\r\n          /* draw white pieces */\r\n          for (let i in board.pieces.white){\r\n            let clickX = board.pieces.white[i][0];\r\n            let clickY = board.pieces.white[i][1];\r\n            if (clickX > x - 16 && clickX < x + 16 &&\r\n            clickY > y - 16 && clickY < y + 16 &&\r\n            board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] != \"BLK\"){\r\n              drawPiece(ctx, 'white', x, y)\r\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"WHT\";\r\n              board.pieces.white[i][2] = true;\r\n            }\r\n          }\r\n\r\n          /* draw black pieces */\r\n          for (let i in board.pieces.black){\r\n            let clickX = board.pieces.black[i][0];\r\n            let clickY = board.pieces.black[i][1];\r\n            if (clickX > x - 16 && clickX < x + 16\r\n              && clickY > y - 16 && clickY < y + 16 &&\r\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] != \"WHT\"){\r\n                drawPiece(ctx, 'black', x, y)\r\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLK\";\r\n              board.pieces.black[i][2] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    function drawPiece(ctx, color, x, y){\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\r\n      ctx.fillStyle = color;\r\n      ctx.fill();\r\n      ctx.lineWidth = 1;\r\n      ctx.strokeStyle = color == 'white' ? 'black' : 'white';\r\n      ctx.stroke();\r\n    }\r\n  \r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n\r\n      draw(context);\r\n\r\n      document.getElementById(\"draw\").onclick = () => {\r\n        if (window.confirm(\"Accept draw?\")){\r\n          console.log(\"Resetting\");\r\n          board = resetBoard();\r\n          draw(context);\r\n          console.log(board);\r\n        }\r\n      }\r\n\r\n      document.getElementById(\"resign\").onclick = () => {\r\n        if (window.confirm(\"Are you sure you want to resign?\")){\r\n          console.log(\"Resetting\");\r\n          board = resetBoard();\r\n          draw(context);\r\n          console.log(board);\r\n        }\r\n      }\r\n\r\n      document.getElementById(\"score\").innerText = `BLACK: 0 WHITE 0`;\r\n\r\n      canvas.addEventListener('mousedown', (e) => {\r\n  \r\n        getClickPos(canvas, e);\r\n  \r\n        draw(context)\r\n        /* print grid array to console */\r\n        let gridString = \"\";\r\n        for (let y = 0; y < 15; y++){\r\n          gridString += \"\\n\"\r\n          for (let x = 0; x < 15; x++){\r\n            gridString += `${x + 1},${y + 1}[${board.grid[x][y]}]`\r\n          }\r\n        }\r\n        console.log(gridString)\r\n  \r\n        /* check to see if 5 in a row has been achieved */\r\n        for (let x = 0; x < 11; x++){\r\n          for (let y = 0; y < 15; y++){\r\n            if (board.grid[x][y] == 'BLK' || board.grid[x][y] == 'WHT'){\r\n              /* check for a horizontal 5 */\r\n              if(board.grid[x][y] == board.grid[x + 1][y] &&\r\n                board.grid[x][y] == board.grid[x + 2][y] &&\r\n                board.grid[x][y] == board.grid[x + 3][y] &&\r\n                board.grid[x][y] == board.grid[x + 4][y]){\r\n                  console.log(\"WINNERWINNERWINNERWINNERWINNER\")\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        /* check to see if a player has finished turn by \r\n        placing a true piece */\r\n        console.log('black '+board.pieces.black[board.pieces.black.length - 1][2])\r\n        console.log('white '+board.pieces.white[board.pieces.white.length - 1][2])\r\n        if (board.pieces.black[board.pieces.black.length - 1][2] &&\r\n          board.pieces.white[board.pieces.white.length - 1][2]){\r\n          if (board.pieces.turn == 'black'){\r\n              board.pieces.turn = 'white'\r\n              document.getElementById('whosturn').innerText = \"It is white's turn\";\r\n          }\r\n          else if (board.pieces.turn == 'white'){\r\n              board.pieces.turn = 'black'\r\n              document.getElementById('whosturn').innerText = \"It is black's turn\";  \r\n          }\r\n          console.log(`${board.pieces.turn}'s turn`)\r\n        }\r\n      })\r\n    }, [draw])\r\n    \r\n    return <canvas ref={canvasRef} {...props}/>\r\n}\r\n\r\nexport {Canvas, board};"]},"metadata":{},"sourceType":"module"}