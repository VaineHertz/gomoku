{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\washy\\\\Documents\\\\GitHub\\\\gomoku\\\\gomoku\\\\src\\\\App.js\";\nimport React, { useRef, useEffect } from 'react'; //import $ from 'jquery';\n\nimport './App.css';\nimport './style.css';\n/* import { FiPhoneCall } from 'react-icons/fi';\r\nimport { FiInstagram } from 'react-icons/fi';\r\nimport { FiMail } from 'react-icons/fi'; */\n\nimport './fonts/GreatVibes-Regular.ttf';\nconst pieces = {\n  black: [],\n  white: []\n};\n\nconst coord = (x, y, cW, cH) => {\n  let grid = [];\n\n  for (let i = 0; i <= cW; i += cW / 15) {\n    if (x < i) {\n      grid.push(i);\n      i += cW;\n    }\n  }\n\n  for (let i = 0; i <= cH; i += cH / 15) {\n    if (y < i) {\n      grid.push(i);\n      i += cH;\n    }\n  }\n\n  if (grid.length === 2) return grid;else return undefined;\n};\n\nconst Canvas = props => {\n  const canvasRef = useRef(null);\n\n  const getClickPos = (canvas, event) => {\n    const cW = canvas.width * 0.97;\n    const cH = canvas.height * 0.97;\n    pieces.black.push(coord(event.offsetX, event.offsetY, cW, cH));\n    console.log(`Clicked x: ${event.offsetX} y: ${event.offsetY}\\nblack pieces: ${pieces.black}`);\n  };\n\n  useEffect(() => {\n    const draw = ctx => {\n      const p = ctx.canvas.height / 80;\n      const cW = ctx.canvas.width * 0.97;\n      const cH = ctx.canvas.height * 0.97;\n      console.clear();\n      console.log(`Ctx height: ${cH} width: ${cW}`); //draw grid 15x15\n\n      for (let i = 0; i <= cW; i += cW / 15) {\n        //console.log(`point X: ${i}`)\n        ctx.moveTo(0.5 + i + p, p);\n        ctx.lineTo(0.5 + i + p, cH + p);\n      }\n\n      for (let i = 0; i <= cH; i += cH / 15) {\n        // console.log(`point Y: ${i}`)\n        ctx.moveTo(p, 0.5 + i + p);\n        ctx.lineTo(cW + p, 0.5 + i + p);\n      } //use black lines for the grid\n\n\n      ctx.strokeStyle = \"black\";\n      ctx.stroke(); //draw black pieces\n\n      for (let i in pieces.black) console.log(`Drawing rect on x: ${pieces.black[i][0]} y: ${pieces.white[i][1]}`);\n\n      ctx.fillRect(pieces.black[i][0], pieces.black[i][1], 20, 20);\n    };\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.addEventListener('mousedown', e => {\n      getClickPos(canvas, e);\n    }); //Our draw come here\n\n    draw(context);\n  });\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }));\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"style.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"head\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Gomoku\")), /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Canvas, {\n    width: \"1000\",\n    height: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"script\", {\n    src: \"modal.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/washy/Documents/GitHub/gomoku/gomoku/src/App.js"],"names":["React","useRef","useEffect","pieces","black","white","coord","x","y","cW","cH","grid","i","push","length","undefined","Canvas","props","canvasRef","getClickPos","canvas","event","width","height","offsetX","offsetY","console","log","draw","ctx","p","clear","moveTo","lineTo","strokeStyle","stroke","fillRect","current","context","getContext","addEventListener","e","App"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react';\r\n//import $ from 'jquery';\r\nimport './App.css';\r\nimport './style.css';\r\n/* import { FiPhoneCall } from 'react-icons/fi';\r\nimport { FiInstagram } from 'react-icons/fi';\r\nimport { FiMail } from 'react-icons/fi'; */\r\nimport './fonts/GreatVibes-Regular.ttf';\r\n\r\nconst pieces = {\r\n  black: [],\r\n  white: []\r\n};\r\n\r\nconst coord = (x, y, cW, cH) => {\r\n  let grid = [];\r\n  for (let i = 0; i <= cW; i += cW / 15){\r\n    if (x < i){\r\n      grid.push(i);\r\n      i += cW;\r\n    }\r\n  }\r\n  for (let i = 0; i <= cH; i += cH / 15) {\r\n    if (y < i){\r\n      grid.push(i);\r\n      i += cH;\r\n    }\r\n  }\r\n  if (grid.length === 2)\r\n    return grid;\r\n  else\r\n    return undefined;\r\n};\r\n\r\nconst Canvas = props => {\r\n  \r\n  const canvasRef = useRef(null)\r\n\r\n  const getClickPos = (canvas, event) => {\r\n    const cW = canvas.width * 0.97;\r\n    const cH = canvas.height * 0.97;\r\n    pieces.black.push(coord(event.offsetX, event.offsetY, cW, cH))\r\n    console.log(`Clicked x: ${event.offsetX} y: ${event.offsetY}\\nblack pieces: ${pieces.black}`)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const draw = ctx => {\r\n      const p = ctx.canvas.height / 80;\r\n      const cW = ctx.canvas.width * 0.97;\r\n      const cH = ctx.canvas.height * 0.97;\r\n      console.clear();\r\n      console.log(`Ctx height: ${cH} width: ${cW}`)\r\n      \r\n      //draw grid 15x15\r\n      for (let i = 0; i <= cW; i += cW / 15){\r\n        //console.log(`point X: ${i}`)\r\n        ctx.moveTo(0.5 + i + p, p);\r\n        ctx.lineTo(0.5 + i + p, cH + p)\r\n      }\r\n      for (let i = 0; i <= cH; i += cH / 15) {\r\n       // console.log(`point Y: ${i}`)\r\n        ctx.moveTo(p, 0.5 + i + p);\r\n        ctx.lineTo(cW + p, 0.5 + i + p);\r\n      }\r\n      //use black lines for the grid\r\n      ctx.strokeStyle = \"black\";\r\n      ctx.stroke()\r\n  \r\n      //draw black pieces\r\n      for (let i in pieces.black)\r\n        console.log(`Drawing rect on x: ${pieces.black[i][0]} y: ${pieces.white[i][1]}`)\r\n        ctx.fillRect(pieces.black[i][0], pieces.black[i][1], 20, 20)\r\n    }\r\n\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n    canvas.addEventListener('mousedown', (e) => {\r\n      getClickPos(canvas, e)\r\n    })\r\n    //Our draw come here\r\n    draw(context)\r\n  })\r\n  \r\n  return <canvas ref={canvasRef} {...props}/>\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\r\n      <head>\r\n\t\t    <title>\r\n\t\t    \tGomoku\r\n\t    \t</title>\r\n\t    </head>\r\n\t    <body>\r\n          {/* */}\r\n\r\n          <Canvas width=\"1000\" height=\"1000\"></Canvas>\r\n\r\n          {/* */}\r\n          <script src=\"modal.js\"></script>\r\n\t  </body>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}