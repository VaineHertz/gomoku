{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\washy\\\\Documents\\\\GitHub\\\\gomoku\\\\gomoku\\\\src\\\\canvas.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { emptyBoard } from './board.js';\nlet pOneName = 'Player 1';\nlet pTwoName = 'Player 2';\nlet pOneScore = 0;\nlet pTwoScore = 0;\nlet pOneTurn = 'black';\nlet inputLock = false;\n\nfunction resetBoard() {\n  const board = emptyBoard();\n\n  for (let i = 0; i < 15; i++) {\n    board.grid.push([]);\n\n    for (let j = 0; j < 15; j++) {\n      board.grid[i].push(`   `);\n    }\n  }\n\n  board.pieces.white.push([0, 0, true]);\n  board.pieces.black.push([0, 0, true]);\n  board.pieces.turn = 'black';\n  return board;\n} //initialize a 15x15 board\n\n\nlet board = resetBoard();\n\nconst Prompt = props => {\n  useEffect(() => {\n    setTimeout(() => {\n      pOneName = window.prompt(\"Enter name for Player 1\");\n    }, 50);\n    setTimeout(() => {\n      if (pOneName != 'Player 1') pTwoName = window.prompt(\"Enter name for Player 2\");\n    }, 50);\n  });\n  useEffect(() => {\n    let x = 0;\n    console.log(pOneName);\n    if (String(pOneName) == 'null') pOneName = 'Player 1';\n    if (String(pTwoName) == 'null') pTwoName = 'Player 2';\n    const intervalID = setInterval(() => {\n      if (++x == 60) window.clearInterval(intervalID);\n      document.getElementById(\"score\").innerText = `${pOneName} (${pOneTurn}) ${pOneScore} - ${pTwoScore} (${pOneTurn === 'black' ? 'white' : 'black'}) ${pTwoName}`;\n    }, 1000);\n  });\n  return '';\n};\n\nconst Canvas = props => {\n  const canvasRef = useRef(null);\n\n  const getClickPos = (canvas, event) => {\n    if (board.pieces.turn === 'black') board.pieces.black.push([event.offsetX, event.offsetY, false]);else if (board.pieces.turn === 'white') board.pieces.white.push([event.offsetX, event.offsetY, false]);\n  };\n\n  const draw = ctx => {\n    /* padding */\n    const p = ctx.canvas.height / 80;\n    /* set grid to 97% of canvas */\n\n    const cW = ctx.canvas.width * 0.97;\n    const cH = ctx.canvas.height * 0.97;\n    ctx.clearRect(p, p, cW + p, cH + p);\n    ctx.beginPath();\n    /* draw a 15x15 grid*/\n\n    for (let i = 0; i <= 480; i += 32) {\n      /* horizontal lines */\n      ctx.moveTo(0.5 + i + p, p);\n      ctx.lineTo(0.5 + i + p, cH + p);\n    }\n\n    for (let i = 0; i <= 480; i += 32) {\n      /* vertical lines */\n      ctx.moveTo(p, 0.5 + i + p);\n      ctx.lineTo(cW + p, 0.5 + i + p);\n    }\n    /* use black lines for the grid */\n\n\n    ctx.strokeStyle = \"black\";\n    ctx.stroke();\n    /* iterate through every tile */\n\n    for (let x = 23; x < 480; x += 32) {\n      for (let y = 23; y < 480; y += 32) {\n        /* draw white pieces */\n        for (let i in board.pieces.white) {\n          let clickX = board.pieces.white[i][0];\n          let clickY = board.pieces.white[i][1];\n\n          if (clickX > x - 16 && clickX < x + 16 && clickY > y - 16 && clickY < y + 16) {\n            if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"   \") {\n              drawPiece(ctx, 'white', x, y, true);\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"WHT\";\n              board.pieces.white[i][2] = true;\n            } else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"WHT\") {\n              drawPiece(ctx, 'white', x, y);\n            }\n          }\n        }\n        /* draw black pieces */\n\n\n        for (let i in board.pieces.black) {\n          let clickX = board.pieces.black[i][0];\n          let clickY = board.pieces.black[i][1];\n\n          if (clickX > x - 16 && clickX < x + 16 && clickY > y - 16 && clickY < y + 16) {\n            if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"   \") {\n              drawPiece(ctx, 'black', x, y, true);\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLK\";\n              board.pieces.black[i][2] = true;\n            } else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"BLK\") {\n              drawPiece(ctx, 'black', x, y);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function drawPiece(ctx, color, x, y, placed) {\n    ctx.beginPath();\n    ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\n    ctx.fillStyle = color;\n    ctx.fill();\n    placed ? ctx.lineWidth = 3 : ctx.lineWidth = 1;\n    ctx.strokeStyle = color === 'white' ? 'black' : 'white';\n    ctx.stroke();\n    ctx.lineWidth = 1;\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    draw(context);\n    /* OFFER DRAW BUTTON */\n\n    document.getElementById(\"draw\").onclick = () => {\n      if (window.confirm(\"Accept draw?\")) addScore('none');\n    };\n    /* RESIGN BUTTON */\n\n\n    document.getElementById(\"resign\").onclick = () => {\n      let pName = 'undefined';\n      if (board.pieces.turn == 'black' && pOneTurn === 'black' || board.pieces.turn == 'white' && pOneTurn !== 'black') pName = pOneName;else if (board.pieces.turn == 'black' && pOneTurn !== 'black' || board.pieces.turn == 'white' && pOneTurn === 'black') pName = pTwoName;\n      if (window.confirm(`${pName} are you sure you want to resign?`)) board.pieces.turn === 'white' ? addScore('BLK') : addScore('WHT');\n    };\n    /* NEW GAME BUTTON */\n\n\n    document.getElementById(\"newGame\").onclick = () => {\n      board = resetBoard();\n      board.pieces.turn = 'black';\n      draw(context);\n      document.getElementById('whosturn').innerText = \"It is black's turn\";\n      document.getElementById(\"newGame\").style.visibility = 'hidden';\n      inputLock = false;\n    };\n\n    function addScore(color) {\n      draw(context);\n      let pWinner = 'undefined';\n\n      if (color === 'BLK' && pOneTurn === 'black' || color === 'WHT' && pOneTurn !== 'black') {\n        pOneScore++;\n        pWinner = pOneName;\n      } else if (color === 'BLK' && pOneTurn !== 'black' || color === 'WHT' && pOneTurn === 'black') {\n        pTwoScore++;\n        pWinner = pTwoName;\n      }\n\n      inputLock = true;\n      document.getElementById(\"newGame\").style.visibility = 'visible';\n      document.getElementById(\"whosturn\").innerText = 'Game over';\n      setTimeout(() => {\n        if (pWinner === pOneName || pWinner === pTwoName) window.alert(`${pWinner} wins!`);\n        pOneTurn === 'black' ? pOneTurn = 'white' : pOneTurn = 'black';\n        document.getElementById(\"score\").innerText = `${pOneName} (${pOneTurn}) ${pOneScore} - ${pTwoScore} (${pOneTurn === 'black' ? 'white' : 'black'}) ${pTwoName}`;\n      }, 50);\n    }\n\n    canvas.addEventListener('mousedown', e => {\n      if (!inputLock) {\n        getClickPos(canvas, e);\n        draw(context);\n\n        if ('Fold /* print grid array to console */') {\n          let gridString = \"\";\n\n          for (let y = 0; y < 15; y++) {\n            gridString += \"\\n\";\n\n            for (let x = 0; x < 15; x++) {\n              gridString += `${x + 1},${y + 1}[${board.grid[x][y]}]`;\n            }\n          }\n\n          console.log(gridString);\n        }\n        /* WIN CODITIONS\r\n        ----------------\r\n        horizontal check to see if 5 in a row has been achieved */\n\n\n        for (let x = 0; x < 11; x++) {\n          for (let y = 0; y < 15; y++) {\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT') {\n              /* horizontal 5 */\n              if (board.grid[x][y] === board.grid[x + 1][y] && board.grid[x][y] === board.grid[x + 2][y] && board.grid[x][y] === board.grid[x + 3][y] && board.grid[x][y] === board.grid[x + 4][y]) addScore(board.grid[x][y]);\n            }\n          }\n        }\n        /* vertical 5 check */\n\n\n        for (let x = 0; x < 15; x++) {\n          for (let y = 0; y < 11; y++) {\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT') {\n              if (board.grid[x][y] === board.grid[x][y + 1] && board.grid[x][y] === board.grid[x][y + 2] && board.grid[x][y] === board.grid[x][y + 3] && board.grid[x][y] === board.grid[x][y + 4]) addScore(board.grid[x][y]);\n            }\n          }\n        }\n        /* descending diagonal 5 check */\n\n\n        for (let x = 0; x < 11; x++) {\n          for (let y = 0; y < 11; y++) {\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT') {\n              if (board.grid[x][y] === board.grid[x + 1][y + 1] && board.grid[x][y] === board.grid[x + 2][y + 2] && board.grid[x][y] === board.grid[x + 3][y + 3] && board.grid[x][y] === board.grid[x + 4][y + 4]) addScore(board.grid[x][y]);\n            }\n          }\n        }\n        /* ascending diagonal 5 */\n\n\n        for (let x = 0; x < 11; x++) {\n          for (let y = 4; y < 15; y++) {\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT') {\n              if (board.grid[x][y] === board.grid[x + 1][y - 1] && board.grid[x][y] === board.grid[x + 2][y - 2] && board.grid[x][y] === board.grid[x + 3][y - 3] && board.grid[x][y] === board.grid[x + 4][y - 4]) addScore(board.grid[x][y]);\n            }\n          }\n        }\n        /* check to see if a player has finished turn by \r\n        placing a true piece */\n\n\n        if (board.pieces.black[board.pieces.black.length - 1][2] && board.pieces.white[board.pieces.white.length - 1][2] && !inputLock) {\n          if (board.pieces.turn === 'black') {\n            board.pieces.turn = 'white';\n            document.getElementById('whosturn').innerText = \"It is white's turn\";\n          } else if (board.pieces.turn === 'white') {\n            board.pieces.turn = 'black';\n            document.getElementById('whosturn').innerText = \"It is black's turn\";\n          }\n\n          console.log(`${board.pieces.turn}'s turn`);\n        }\n      }\n    });\n  }, [draw]);\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport { Canvas, Prompt, board };","map":{"version":3,"sources":["C:/Users/washy/Documents/GitHub/gomoku/gomoku/src/canvas.js"],"names":["React","useRef","useEffect","emptyBoard","pOneName","pTwoName","pOneScore","pTwoScore","pOneTurn","inputLock","resetBoard","board","i","grid","push","j","pieces","white","black","turn","Prompt","props","setTimeout","window","prompt","x","console","log","String","intervalID","setInterval","clearInterval","document","getElementById","innerText","Canvas","canvasRef","getClickPos","canvas","event","offsetX","offsetY","draw","ctx","p","height","cW","width","cH","clearRect","beginPath","moveTo","lineTo","strokeStyle","stroke","y","clickX","clickY","Math","round","drawPiece","color","placed","arc","PI","fillStyle","fill","lineWidth","current","context","getContext","onclick","confirm","addScore","pName","style","visibility","pWinner","alert","addEventListener","e","gridString","length"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react';\r\nimport {emptyBoard} from './board.js';\r\n\r\nlet pOneName = 'Player 1'\r\nlet pTwoName = 'Player 2'\r\nlet pOneScore = 0;\r\nlet pTwoScore = 0;\r\nlet pOneTurn = 'black'\r\nlet inputLock = false;\r\n\r\n\r\nfunction resetBoard(){\r\n  const board = emptyBoard();\r\n  for (let i = 0; i < 15; i++){\r\n    board.grid.push([])\r\n    for (let j = 0; j < 15; j++){\r\n    board.grid[i].push(`   `)\r\n    }\r\n  }\r\n  board.pieces.white.push([0,0,true]);\r\n  board.pieces.black.push([0,0,true]);\r\n  board.pieces.turn = 'black';\r\n  return board;\r\n}\r\n\r\n//initialize a 15x15 board\r\nlet board = resetBoard();\r\n\r\nconst Prompt = (props) => {\r\n  useEffect(() => {\r\n  setTimeout(() => {\r\n  pOneName = window.prompt(\"Enter name for Player 1\");}, 50)\r\n  \r\n  setTimeout(() => {\r\n    if (pOneName != 'Player 1')\r\n      pTwoName = window.prompt(\"Enter name for Player 2\");}, 50);\r\n  });\r\n\r\n  useEffect(() => {\r\n    let x = 0;\r\n    console.log(pOneName)\r\n    if (String(pOneName) == 'null')\r\n      pOneName = 'Player 1';\r\n    if (String(pTwoName) == 'null')\r\n      pTwoName = 'Player 2';\r\n    const intervalID = setInterval(() => {\r\n      if (++x == 60)\r\n        window.clearInterval(intervalID)\r\n      document.getElementById(\"score\").innerText = `${pOneName} (${pOneTurn}) ${pOneScore} - ${pTwoScore} (${pOneTurn === 'black' ? 'white' : 'black'}) ${pTwoName}`},\r\n      1000)})\r\n\r\n  return ('')\r\n}\r\n\r\nconst Canvas = props => {\r\n  const canvasRef = useRef(null);\r\n  \r\n  const getClickPos = (canvas, event) => {\r\n    if (board.pieces.turn === 'black')\r\n      board.pieces.black.push([event.offsetX, event.offsetY, false]);\r\n    else if (board.pieces.turn === 'white')\r\n      board.pieces.white.push([event.offsetX, event.offsetY, false]);\r\n  }\r\n\r\n  const draw = ctx => {\r\n    /* padding */\r\n    const p = ctx.canvas.height / 80;\r\n    /* set grid to 97% of canvas */\r\n    const cW = ctx.canvas.width * 0.97;\r\n    const cH = ctx.canvas.height * 0.97;\r\n    \r\n    ctx.clearRect(p, p, cW+p, cH+p)\r\n\r\n    ctx.beginPath();\r\n    /* draw a 15x15 grid*/\r\n    for (let i = 0; i <= 480; i += 32){\r\n      /* horizontal lines */\r\n      ctx.moveTo(0.5 + i + p, p);\r\n      ctx.lineTo(0.5 + i + p, cH + p)\r\n    }\r\n    for (let i = 0; i <= 480; i += 32) {\r\n      /* vertical lines */\r\n      ctx.moveTo(p, 0.5 + i + p);\r\n      ctx.lineTo(cW + p, 0.5 + i + p);\r\n    }\r\n    /* use black lines for the grid */\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.stroke()\r\n\r\n    /* iterate through every tile */\r\n    for (let x = 23; x < 480; x += 32){\r\n      for (let y = 23; y < 480; y += 32){\r\n        /* draw white pieces */\r\n        for (let i in board.pieces.white){\r\n          let clickX = board.pieces.white[i][0];\r\n          let clickY = board.pieces.white[i][1];\r\n          if (clickX > x - 16 && clickX < x + 16 &&\r\n          clickY > y - 16 && clickY < y + 16){\r\n            if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"   \"){\r\n              drawPiece(ctx, 'white', x, y, true)\r\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"WHT\";\r\n              board.pieces.white[i][2] = true;\r\n            }\r\n            else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"WHT\"){\r\n              drawPiece(ctx, 'white', x, y)\r\n            }\r\n          }\r\n        }\r\n\r\n        /* draw black pieces */\r\n        for (let i in board.pieces.black){\r\n          let clickX = board.pieces.black[i][0];\r\n          let clickY = board.pieces.black[i][1];\r\n          if (clickX > x - 16 && clickX < x + 16\r\n            && clickY > y - 16 && clickY < y + 16){\r\n            if(board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"   \"){\r\n              drawPiece(ctx, 'black', x, y, true)\r\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLK\";\r\n              board.pieces.black[i][2] = true;\r\n            }\r\n            else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] === \"BLK\"){\r\n              drawPiece(ctx, 'black', x, y)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function drawPiece(ctx, color, x, y, placed){\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n    placed ? ctx.lineWidth = 3 : ctx.lineWidth = 1;\r\n    ctx.strokeStyle = color === 'white' ? 'black' : 'white';\r\n    ctx.stroke();\r\n    ctx.lineWidth = 1;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    draw(context);\r\n    \r\n    /* OFFER DRAW BUTTON */\r\n    document.getElementById(\"draw\").onclick = () => {\r\n      if (window.confirm(\"Accept draw?\"))\r\n        addScore('none')\r\n    }\r\n\r\n    /* RESIGN BUTTON */\r\n    document.getElementById(\"resign\").onclick = () => {\r\n      let pName = 'undefined'\r\n      if ((board.pieces.turn == 'black' && pOneTurn === 'black') || (board.pieces.turn == 'white' && pOneTurn !== 'black'))\r\n        pName = pOneName;\r\n      else if ((board.pieces.turn == 'black'  && pOneTurn !== 'black') || (board.pieces.turn == 'white' && pOneTurn === 'black'))\r\n        pName = pTwoName;\r\n      if (window.confirm(`${pName} are you sure you want to resign?`))\r\n        board.pieces.turn === 'white' ? addScore('BLK') : addScore('WHT');\r\n    }\r\n\r\n    /* NEW GAME BUTTON */\r\n    document.getElementById(\"newGame\").onclick = () => {\r\n      board = resetBoard();\r\n      board.pieces.turn = 'black';\r\n      draw(context);\r\n      document.getElementById('whosturn').innerText = \"It is black's turn\";\r\n      document.getElementById(\"newGame\").style.visibility = 'hidden';\r\n      inputLock = false;\r\n    }\r\n\r\n    function addScore(color){\r\n      draw(context);\r\n      let pWinner = 'undefined';\r\n      if ((color === 'BLK' && pOneTurn === 'black') || (color === 'WHT' && pOneTurn !== 'black')){\r\n        pOneScore++;\r\n        pWinner = pOneName;\r\n      }\r\n      else if ((color === 'BLK' && pOneTurn !== 'black') || (color === 'WHT' && pOneTurn === 'black')){\r\n        pTwoScore++;\r\n        pWinner = pTwoName;\r\n      }\r\n      \r\n      inputLock = true;\r\n      document.getElementById(\"newGame\").style.visibility = 'visible';\r\n      document.getElementById(\"whosturn\").innerText = 'Game over'\r\n      setTimeout(() => {\r\n          if (pWinner === pOneName || pWinner === pTwoName)\r\n            window.alert(`${pWinner} wins!`)\r\n          pOneTurn === 'black' ? pOneTurn = 'white' : pOneTurn = 'black';\r\n          document.getElementById(\"score\").innerText = `${pOneName} (${pOneTurn}) ${pOneScore} - ${pTwoScore} (${pOneTurn === 'black' ? 'white' : 'black'}) ${pTwoName}`;\r\n        }, 50)\r\n    }\r\n\r\n    canvas.addEventListener('mousedown', (e) => {\r\n      \r\n      if (!inputLock){\r\n        getClickPos(canvas, e);\r\n  \r\n        draw(context)\r\n        if ('Fold /* print grid array to console */'){\r\n          let gridString = \"\";\r\n          for (let y = 0; y < 15; y++){\r\n            gridString += \"\\n\"\r\n            for (let x = 0; x < 15; x++){\r\n              gridString += `${x + 1},${y + 1}[${board.grid[x][y]}]`\r\n            }\r\n          }\r\n          console.log(gridString)\r\n        }\r\n        /* WIN CODITIONS\r\n        ----------------\r\n        horizontal check to see if 5 in a row has been achieved */\r\n        for (let x = 0; x < 11; x++){\r\n          for (let y = 0; y < 15; y++){\r\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT'){\r\n              /* horizontal 5 */\r\n              if(board.grid[x][y] === board.grid[x + 1][y] &&\r\n                board.grid[x][y] === board.grid[x + 2][y] &&\r\n                board.grid[x][y] === board.grid[x + 3][y] &&\r\n                board.grid[x][y] === board.grid[x + 4][y])\r\n                  addScore(board.grid[x][y])\r\n            }\r\n          }\r\n        }\r\n        /* vertical 5 check */\r\n        for (let x = 0; x < 15; x++){\r\n          for (let y = 0; y < 11; y++){\r\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT'){\r\n              if(board.grid[x][y] === board.grid[x][y + 1] &&\r\n                board.grid[x][y] === board.grid[x][y + 2] &&\r\n                board.grid[x][y] === board.grid[x][y + 3] &&\r\n                board.grid[x][y] === board.grid[x][y + 4])\r\n                  addScore(board.grid[x][y])\r\n            }\r\n          }\r\n        }\r\n        /* descending diagonal 5 check */\r\n        for (let x = 0; x < 11; x++){\r\n          for (let y = 0; y < 11; y++){\r\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT'){\r\n              if(board.grid[x][y] === board.grid[x + 1][y + 1] &&\r\n                board.grid[x][y] === board.grid[x + 2][y + 2] &&\r\n                board.grid[x][y] === board.grid[x + 3][y + 3] &&\r\n                board.grid[x][y] === board.grid[x + 4][y + 4])\r\n                  addScore(board.grid[x][y])\r\n            }\r\n          }\r\n        }\r\n        /* ascending diagonal 5 */\r\n        for (let x = 0; x < 11; x++){\r\n          for (let y = 4; y < 15; y++){\r\n            if (board.grid[x][y] === 'BLK' || board.grid[x][y] === 'WHT'){\r\n              if(board.grid[x][y] === board.grid[x + 1][y - 1] &&\r\n                board.grid[x][y] === board.grid[x + 2][y - 2] &&\r\n                board.grid[x][y] === board.grid[x + 3][y - 3] &&\r\n                board.grid[x][y] === board.grid[x + 4][y - 4])\r\n                  addScore(board.grid[x][y])\r\n            }\r\n          }\r\n        }\r\n  \r\n        /* check to see if a player has finished turn by \r\n        placing a true piece */\r\n        if (board.pieces.black[board.pieces.black.length - 1][2] &&\r\n          board.pieces.white[board.pieces.white.length - 1][2] &&\r\n          !inputLock){\r\n          if (board.pieces.turn === 'black'){\r\n              board.pieces.turn = 'white'\r\n              document.getElementById('whosturn').innerText = \"It is white's turn\";\r\n          }\r\n          else if (board.pieces.turn === 'white'){\r\n              board.pieces.turn = 'black'\r\n              document.getElementById('whosturn').innerText = \"It is black's turn\";  \r\n          }\r\n          console.log(`${board.pieces.turn}'s turn`)\r\n        }\r\n      }\r\n    })\r\n  }, [draw])\r\n  \r\n  return <canvas ref={canvasRef} {...props}/>\r\n}\r\n\r\nexport {Canvas, Prompt, board};"]},"metadata":{},"sourceType":"module"}