{"version":3,"sources":["fonts/GreatVibes-Regular.ttf","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","pieces","black","white","grid","i","push","j","concat","Canvas","props","canvasRef","useRef","draw","ctx","canvas","height","cW","width","cH","moveTo","lineTo","strokeStyle","stroke","useEffect","current","context","getContext","addEventListener","e","event","offsetX","offsetY","x","y","clickX","clickY","fillRect","Math","round","console","log","Number","react_default","a","createElement","Object","assign","ref","App","className","rel","type","href","App_Canvas","src","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f020924d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GreatVibes-Regular.859a0d36.ttf\";","import React, {useRef, useEffect} from 'react';\r\n//import $ from 'jquery';\r\nimport './App.css';\r\nimport './style.css';\r\n/* import { FiPhoneCall } from 'react-icons/fi';\r\nimport { FiInstagram } from 'react-icons/fi';\r\nimport { FiMail } from 'react-icons/fi'; */\r\nimport './fonts/GreatVibes-Regular.ttf';\r\n\r\nconst pieces = {\r\n  black: [],\r\n  white: []\r\n};\r\n\r\nconst grid = [];\r\n\r\nfor (let i = 0; i < 15; i++){\r\n  grid.push([])\r\n  for (let j = 0; j < 15; j++){\r\n    grid[i].push(`-${j + 1}-`)\r\n  }\r\n}\r\n\r\nconst Canvas = props => {\r\n  \r\n  const canvasRef = useRef(null)\r\n\r\n  const getClickPos = (canvas, event) => {\r\n    pieces.black.push([event.offsetX, event.offsetY, false])\r\n  }\r\n\r\n  const draw = ctx => {\r\n    const p = ctx.canvas.height / 80;\r\n    const cW = ctx.canvas.width * 0.97;\r\n    const cH = ctx.canvas.height * 0.97;\r\n    \r\n    //draw grid 15x15\r\n    for (let i = 0; i <= 480; i += 32){\r\n      //console.log(`point X: ${i}`)\r\n      ctx.moveTo(0.5 + i + p, p);\r\n      ctx.lineTo(0.5 + i + p, cH + p)\r\n    }\r\n    for (let i = 0; i <= 480; i += 32) {\r\n     // console.log(`point Y: ${i}`)\r\n      ctx.moveTo(p, 0.5 + i + p);\r\n      ctx.lineTo(cW + p, 0.5 + i + p);\r\n    }\r\n    //use black lines for the grid\r\n    ctx.strokeStyle = \"black\";\r\n    ctx.stroke()\r\n  }\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n    canvas.addEventListener('mousedown', (e) => {\r\n\r\n      getClickPos(canvas, e)\r\n  \r\n      //draw black pieces\r\n      for (let x = 23; x < 480; x += 32){\r\n        for (let y = 23; y < 480; y += 32){\r\n          for (let i in pieces.black){\r\n            let clickX = pieces.black[i][0];\r\n            let clickY = pieces.black[i][1];\r\n            if (clickX > x - 16 && clickX < x + 16\r\n              && clickY > y - 16 && clickY < y + 16){\r\n              context.fillRect(x - 8, y - 8, 15, 15);\r\n              grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLACK\"\r\n              for (let j in grid)\r\n                console.log(`COLUMN: ${Number(j) + 1} ${grid[j]}`)\r\n              pieces.black[i][2] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log(`black pieces: ${pieces.black}`);\r\n    })\r\n    //Our draw come here\r\n    draw(context)\r\n  }, [draw])\r\n  \r\n  return <canvas ref={canvasRef} {...props}/>\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\r\n      <head>\r\n\t\t    <title>\r\n\t\t    \tGomoku\r\n\t    \t</title>\r\n\t    </head>\r\n\t    <body>\r\n          {/* */}\r\n\r\n          <Canvas width=\"495\" height=\"495\"></Canvas>\r\n\r\n          {/* */}\r\n          <script src=\"modal.js\"></script>\r\n\t  </body>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}