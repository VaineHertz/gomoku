{"version":3,"sources":["fonts/GreatVibes-Regular.ttf","canvas.js","board.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","resetBoard","board","grid","i","push","j","pieces","black","white","turn","emptyBoard","console","log","offerDraw","window","confirm","Canvas","props","canvasRef","useRef","draw","ctx","canvas","height","cW","width","cH","moveTo","lineTo","strokeStyle","stroke","drawPiece","context","color","x","y","beginPath","arc","Math","PI","fillStyle","fill","lineWidth","useEffect","current","getContext","addEventListener","e","event","offsetX","offsetY","clickX","clickY","round","gridString","concat","length","document","getElementById","innerText","react_default","a","createElement","Object","assign","ref","App","className","rel","type","href","canvas_Canvas","id","onClick","src","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0b8d18e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GreatVibes-Regular.859a0d36.ttf\";","import React, {useRef, useEffect} from 'react';\r\nimport {emptyBoard} from './board.js';\r\n\r\nfunction resetBoard(){\r\n  const board = emptyBoard();\r\n  for (let i = 0; i < 15; i++){\r\n    board.grid.push([])\r\n    for (let j = 0; j < 15; j++){\r\n    board.grid[i].push(`   `)\r\n    }\r\n  }\r\n  board.pieces.white.push([0,0,true]);\r\n  board.pieces.black.push([0,0,true])\r\n  console.log(board)\r\n  return board;\r\n}\r\n\r\n//initialize a 15x15 board\r\nlet board = resetBoard();\r\n\r\nfunction offerDraw(){\r\n  if (window.confirm(\"Accept draw?\")){\r\n    console.log(\"Resetting\");\r\n    board = resetBoard();\r\n    console.log(board)\r\n  }\r\n}\r\n\r\nconst Canvas = props => {\r\n  \r\n    const canvasRef = useRef(null)\r\n  \r\n    const getClickPos = (canvas, event) => {\r\n      if (board.pieces.turn == 'black')\r\n        board.pieces.black.push([event.offsetX, event.offsetY, false]);\r\n      else if (board.pieces.turn == 'white')\r\n        board.pieces.white.push([event.offsetX, event.offsetY, false]);\r\n    }\r\n  \r\n    const draw = ctx => {\r\n      /* padding */\r\n      const p = ctx.canvas.height / 80;\r\n      /* set grid to 97% of canvas */\r\n      const cW = ctx.canvas.width * 0.97;\r\n      const cH = ctx.canvas.height * 0.97;\r\n      \r\n      /* draw a 15x15 grid*/\r\n      for (let i = 0; i <= 480; i += 32){\r\n        /* horizontal lines */\r\n        ctx.moveTo(0.5 + i + p, p);\r\n        ctx.lineTo(0.5 + i + p, cH + p)\r\n      }\r\n      for (let i = 0; i <= 480; i += 32) {\r\n        /* vertical lines */\r\n        ctx.moveTo(p, 0.5 + i + p);\r\n        ctx.lineTo(cW + p, 0.5 + i + p);\r\n      }\r\n      /* use black lines for the grid */\r\n      ctx.strokeStyle = \"black\";\r\n      ctx.stroke()\r\n    }\r\n  \r\n    function drawPiece(context, color, x, y){\r\n      context.beginPath();\r\n      context.arc(x, y, 10, 0, 2 * Math.PI, false);\r\n      context.fillStyle = color;\r\n      context.fill();\r\n      context.lineWidth = 1;\r\n      context.strokeStyle = color == 'white' ? 'black' : 'white';\r\n      context.stroke();\r\n    }\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current\r\n      const context = canvas.getContext('2d')\r\n      canvas.addEventListener('mousedown', (e) => {\r\n  \r\n        getClickPos(canvas, e)\r\n  \r\n        /* iterate through every tile */\r\n        for (let x = 23; x < 480; x += 32){\r\n          for (let y = 23; y < 480; y += 32){\r\n            /* draw white pieces */\r\n            for (let i in board.pieces.white){\r\n              let clickX = board.pieces.white[i][0];\r\n              let clickY = board.pieces.white[i][1];\r\n              if (clickX > x - 16 && clickX < x + 16 &&\r\n              clickY > y - 16 && clickY < y + 16 &&\r\n              board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] != \"BLK\"){\r\n                drawPiece(context, 'white', x, y)\r\n                board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"WHT\";\r\n                board.pieces.white[i][2] = true;\r\n              }\r\n            }\r\n  \r\n            /* draw black pieces */\r\n            for (let i in board.pieces.black){\r\n              let clickX = board.pieces.black[i][0];\r\n              let clickY = board.pieces.black[i][1];\r\n              if (clickX > x - 16 && clickX < x + 16\r\n                && clickY > y - 16 && clickY < y + 16 &&\r\n                board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] != \"WHT\"){\r\n                  drawPiece(context, 'black', x, y)\r\n                board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLK\";\r\n                board.pieces.black[i][2] = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        /* print grid array to console */\r\n        let gridString = \"\";\r\n        for (let y = 0; y < 15; y++){\r\n          gridString += \"\\n\"\r\n          for (let x = 0; x < 15; x++){\r\n            gridString += `${x + 1},${y + 1}[${board.grid[x][y]}]`\r\n          }\r\n        }\r\n        console.log(gridString)\r\n  \r\n        /* check to see if 5 in a row has been achieved */\r\n        for (let x = 0; x < 11; x++){\r\n          for (let y = 0; y < 15; y++){\r\n            if (board.grid[x][y] == 'BLK' || board.grid[x][y] == 'WHT'){\r\n              /* check for a horizontal 5 */\r\n              if(board.grid[x][y] == board.grid[x + 1][y] &&\r\n                board.grid[x][y] == board.grid[x + 2][y] &&\r\n                board.grid[x][y] == board.grid[x + 3][y] &&\r\n                board.grid[x][y] == board.grid[x + 4][y]){\r\n                  console.log(\"WINNERWINNERWINNERWINNERWINNER\")\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        /* check to see if a player has finished turn by \r\n        placing a true piece */\r\n        console.log('black '+board.pieces.black[board.pieces.black.length - 1][2])\r\n        console.log('white '+board.pieces.white[board.pieces.white.length - 1][2])\r\n        if (board.pieces.black[board.pieces.black.length - 1][2] &&\r\n          board.pieces.white[board.pieces.white.length - 1][2]){\r\n          if (board.pieces.turn == 'black'){\r\n              board.pieces.turn = 'white'\r\n              document.getElementById('whosturn').innerText = \"It is white's turn\";\r\n          }\r\n          else if (board.pieces.turn == 'white'){\r\n              board.pieces.turn = 'black'\r\n              document.getElementById('whosturn').innerText = \"It is black's turn\";  \r\n          }\r\n          console.log(`${board.pieces.turn}'s turn`)\r\n        }\r\n      })\r\n      /* draw comes here */\r\n      draw(context)\r\n    }, [draw])\r\n    \r\n    return <canvas ref={canvasRef} {...props}/>\r\n}\r\n\r\nexport {Canvas, board, offerDraw};","function emptyBoard(){\r\n\r\n    /* 15x15 grid in memory */\r\n    let grid = [];\r\n    for (let i = 0; i < 15; i++){\r\n        grid.push([])\r\n        for (let j = 0; j < 15; j++){\r\n        grid[i].push(`   `)\r\n        }\r\n    }\r\n\r\n    /* stores clicks and whether they are valid piece placements\r\n    and also tracks whos turn it is */\r\n    return {pieces: {\r\n        black: [],\r\n        white: [],\r\n        turn: 'black'\r\n    },\r\n    grid}\r\n    \r\n};\r\n\r\nexport {emptyBoard};","import React from 'react';\r\nimport $ from 'jquery';\r\nimport './App.css';\r\nimport './style.css';\r\nimport {Canvas, offerDraw} from './canvas.js';\r\n/* import { FiPhoneCall } from 'react-icons/fi';\r\nimport { FiInstagram } from 'react-icons/fi';\r\nimport { FiMail } from 'react-icons/fi'; */\r\nimport './fonts/GreatVibes-Regular.ttf';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\r\n      <head>\r\n\t\t    <title>\r\n\t\t    \tGomoku\r\n\t    \t</title>\r\n\t    </head>\r\n\t    <body>\r\n          {/* */}\r\n\r\n          <Canvas width=\"495\" height=\"495\"></Canvas>\r\n          <div id=\"whosturn\">Black's turn to start</div>\r\n          <button id=\"draw\" onClick={offerDraw}>OFFER DRAW</button>\r\n          <button id=\"resign\" onClick={offerDraw}>RESIGN</button>\r\n\r\n\r\n          {/* */}\r\n          <script src=\"modal.js\"></script>\r\n\t  </body>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}