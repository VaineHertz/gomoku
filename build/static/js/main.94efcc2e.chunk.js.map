{"version":3,"sources":["fonts/GreatVibes-Regular.ttf","canvas.js","board.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","pOneScore","pTwoScore","pOneTurn","inputLock","resetBoard","board","grid","i","push","j","pieces","black","white","turn","emptyBoard","Canvas","props","canvasRef","useRef","draw","ctx","canvas","height","cW","width","cH","clearRect","beginPath","moveTo","lineTo","strokeStyle","stroke","x","y","clickX","clickY","Math","round","drawPiece","color","placed","arc","PI","fillStyle","fill","lineWidth","useEffect","current","context","getContext","addScore","pWinner","document","getElementById","style","visibility","setTimeout","window","alert","concat","innerText","onclick","confirm","console","log","addEventListener","e","event","offsetX","offsetY","gridString","length","react_default","a","createElement","Object","assign","ref","App","className","rel","type","href","id","canvas_Canvas","src","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.94efcc2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GreatVibes-Regular.859a0d36.ttf\";","import React, {useRef, useEffect} from 'react';\r\nimport {emptyBoard} from './board.js';\r\n\r\nlet pOneScore = 0;\r\nlet pTwoScore = 0;\r\nlet pOneTurn = 'black'\r\nlet inputLock = false;\r\n\r\nfunction resetBoard(){\r\n  const board = emptyBoard();\r\n  for (let i = 0; i < 15; i++){\r\n    board.grid.push([])\r\n    for (let j = 0; j < 15; j++){\r\n    board.grid[i].push(`   `)\r\n    }\r\n  }\r\n  board.pieces.white.push([0,0,true]);\r\n  board.pieces.black.push([0,0,true]);\r\n  //above fake true pieces trigger the turn to flip, so I set the turn to white\r\n  board.pieces.turn = 'white';\r\n  return board;\r\n}\r\n\r\n//initialize a 15x15 board\r\nlet board = resetBoard();\r\n\r\nconst Canvas = props => {\r\n    const canvasRef = useRef(null);\r\n  \r\n    const getClickPos = (canvas, event) => {\r\n      if (board.pieces.turn == 'black')\r\n        board.pieces.black.push([event.offsetX, event.offsetY, false]);\r\n      else if (board.pieces.turn == 'white')\r\n        board.pieces.white.push([event.offsetX, event.offsetY, false]);\r\n    }\r\n  \r\n    const draw = ctx => {\r\n      /* padding */\r\n      const p = ctx.canvas.height / 80;\r\n      /* set grid to 97% of canvas */\r\n      const cW = ctx.canvas.width * 0.97;\r\n      const cH = ctx.canvas.height * 0.97;\r\n      \r\n      ctx.clearRect(p, p, cW+p, cH+p)\r\n\r\n      ctx.beginPath();\r\n      /* draw a 15x15 grid*/\r\n      for (let i = 0; i <= 480; i += 32){\r\n        /* horizontal lines */\r\n        ctx.moveTo(0.5 + i + p, p);\r\n        ctx.lineTo(0.5 + i + p, cH + p)\r\n      }\r\n      for (let i = 0; i <= 480; i += 32) {\r\n        /* vertical lines */\r\n        ctx.moveTo(p, 0.5 + i + p);\r\n        ctx.lineTo(cW + p, 0.5 + i + p);\r\n      }\r\n      /* use black lines for the grid */\r\n      ctx.strokeStyle = \"black\";\r\n      ctx.stroke()\r\n\r\n      /* iterate through every tile */\r\n      for (let x = 23; x < 480; x += 32){\r\n        for (let y = 23; y < 480; y += 32){\r\n          /* draw white pieces */\r\n          for (let i in board.pieces.white){\r\n            let clickX = board.pieces.white[i][0];\r\n            let clickY = board.pieces.white[i][1];\r\n            if (clickX > x - 16 && clickX < x + 16 &&\r\n            clickY > y - 16 && clickY < y + 16){\r\n              if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] == \"   \"){\r\n                drawPiece(ctx, 'white', x, y, true)\r\n                board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"WHT\";\r\n                board.pieces.white[i][2] = true;\r\n              }\r\n              else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] == \"WHT\"){\r\n                drawPiece(ctx, 'white', x, y)\r\n              }\r\n            }\r\n          }\r\n\r\n          /* draw black pieces */\r\n          for (let i in board.pieces.black){\r\n            let clickX = board.pieces.black[i][0];\r\n            let clickY = board.pieces.black[i][1];\r\n            if (clickX > x - 16 && clickX < x + 16\r\n              && clickY > y - 16 && clickY < y + 16){\r\n              if(board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] == \"   \"){\r\n                drawPiece(ctx, 'black', x, y, true)\r\n                board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] = \"BLK\";\r\n                board.pieces.black[i][2] = true;\r\n              }\r\n              else if (board.grid[Math.round(x / 32 - 1)][Math.round(y / 32 - 1)] == \"BLK\"){\r\n                drawPiece(ctx, 'black', x, y)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    function drawPiece(ctx, color, x, y, placed){\r\n  \r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\r\n      ctx.fillStyle = color;\r\n      ctx.fill();\r\n      placed ? ctx.lineWidth = 3 : ctx.lineWidth = 1;\r\n      ctx.strokeStyle = color == 'white' ? 'black' : 'white';\r\n      ctx.stroke();\r\n      ctx.lineWidth = 1;\r\n    }\r\n  \r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n\r\n      draw(context);\r\n\r\n      /* OFFER DRAW BUTTON */\r\n      document.getElementById(\"draw\").onclick = () => {\r\n        if (window.confirm(\"Accept draw?\")){\r\n          console.log(\"Resetting\");\r\n          board = resetBoard();\r\n          board.pieces.turn = 'black';\r\n          draw(context);\r\n          document.getElementById('whosturn').innerText = \"It is black's turn\"; \r\n        }\r\n      }\r\n\r\n      /* RESIGN BUTTON */\r\n      document.getElementById(\"resign\").onclick = () => {\r\n        if (window.confirm(\"Are you sure you want to resign?\")){\r\n          board.pieces.turn == 'white' ? addScore('BLK') : addScore('WHT') ;\r\n          board = resetBoard();\r\n          board.pieces.turn = 'black';\r\n          draw(context);\r\n          document.getElementById('whosturn').innerText = \"It is black's turn\"; \r\n        }\r\n      }\r\n\r\n      /* NEW GAME BUTTON */\r\n      document.getElementById(\"newGame\").onclick = () => {\r\n        board = resetBoard();\r\n        board.pieces.turn = 'black';\r\n        draw(context);\r\n        document.getElementById('whosturn').innerText = \"It is black's turn\";\r\n        document.getElementById(\"newGame\").style.visibility = 'hidden';\r\n        inputLock = false;\r\n      }\r\n\r\n      function addScore(color){\r\n        draw(context);\r\n        let pWinner = 'undefined';\r\n        if (color == 'BLK' && pOneTurn == 'black'){\r\n          pOneScore++;\r\n          pWinner = 'Player 1'\r\n        }\r\n        else if (color == 'BLK' && pOneTurn != 'black'){\r\n          pTwoScore++;\r\n          pWinner = 'Player 2'\r\n        }\r\n        else if (color == 'WHT' && pOneTurn != 'black'){\r\n          pOneScore++;\r\n          pWinner = 'Player 1'\r\n        }\r\n        else if (color == 'WHT' && pOneTurn == 'black'){\r\n          pTwoScore++\r\n          pWinner = 'Player 2'\r\n        }\r\n        inputLock = true;\r\n        document.getElementById(\"newGame\").style.visibility = 'visible';\r\n        setTimeout(() => {\r\n            window.alert(`${pWinner} wins!`)\r\n            pOneTurn == 'black' ? pOneTurn = 'white' : pOneTurn = 'black';\r\n            document.getElementById(\"score\").innerText = `P1 (${pOneTurn}) ${pOneScore} - ${pTwoScore} (${pOneTurn == 'black' ? 'white' : 'black'}) P2`;\r\n          }, 50)\r\n      }\r\n\r\n      canvas.addEventListener('mousedown', (e) => {\r\n        \r\n        if (!inputLock){\r\n          getClickPos(canvas, e);\r\n    \r\n          draw(context)\r\n          if ('Fold /* print grid array to console */'){\r\n            let gridString = \"\";\r\n            for (let y = 0; y < 15; y++){\r\n              gridString += \"\\n\"\r\n              for (let x = 0; x < 15; x++){\r\n                gridString += `${x + 1},${y + 1}[${board.grid[x][y]}]`\r\n              }\r\n            }\r\n            console.log(gridString)\r\n          }\r\n          /* WIN CODITIONS\r\n          ----------------\r\n          horizontal check to see if 5 in a row has been achieved */\r\n          for (let x = 0; x < 11; x++){\r\n            for (let y = 0; y < 15; y++){\r\n              if (board.grid[x][y] == 'BLK' || board.grid[x][y] == 'WHT'){\r\n                /* horizontal 5 */\r\n                if(board.grid[x][y] == board.grid[x + 1][y] &&\r\n                  board.grid[x][y] == board.grid[x + 2][y] &&\r\n                  board.grid[x][y] == board.grid[x + 3][y] &&\r\n                  board.grid[x][y] == board.grid[x + 4][y])\r\n                    addScore(board.grid[x][y])\r\n              }\r\n            }\r\n          }\r\n          /* vertical 5 check */\r\n          for (let x = 0; x < 15; x++){\r\n            for (let y = 0; y < 11; y++){\r\n              if (board.grid[x][y] == 'BLK' || board.grid[x][y] == 'WHT'){\r\n                if(board.grid[x][y] == board.grid[x][y + 1] &&\r\n                  board.grid[x][y] == board.grid[x][y + 2] &&\r\n                  board.grid[x][y] == board.grid[x][y + 3] &&\r\n                  board.grid[x][y] == board.grid[x][y + 4])\r\n                    addScore(board.grid[x][y])\r\n              }\r\n            }\r\n          }\r\n          /* descending diagonal 5 check */\r\n          for (let x = 0; x < 11; x++){\r\n            for (let y = 0; y < 11; y++){\r\n              if (board.grid[x][y] == 'BLK' || board.grid[x][y] == 'WHT'){\r\n                if(board.grid[x][y] == board.grid[x + 1][y + 1] &&\r\n                  board.grid[x][y] == board.grid[x + 2][y + 2] &&\r\n                  board.grid[x][y] == board.grid[x + 3][y + 3] &&\r\n                  board.grid[x][y] == board.grid[x + 4][y + 4])\r\n                    addScore(board.grid[x][y])\r\n              }\r\n            }\r\n          }\r\n          /* ascending diagonal 5 */\r\n          for (let x = 0; x < 11; x++){\r\n            for (let y = 4; y < 15; y++){\r\n              if (board.grid[x][y] == 'BLK' || board.grid[x][y] == 'WHT'){\r\n                if(board.grid[x][y] == board.grid[x + 1][y - 1] &&\r\n                  board.grid[x][y] == board.grid[x + 2][y - 2] &&\r\n                  board.grid[x][y] == board.grid[x + 3][y - 3] &&\r\n                  board.grid[x][y] == board.grid[x + 4][y - 4])\r\n                    addScore(board.grid[x][y])\r\n              }\r\n            }\r\n          }\r\n    \r\n          /* check to see if a player has finished turn by \r\n          placing a true piece */\r\n          if (board.pieces.black[board.pieces.black.length - 1][2] &&\r\n            board.pieces.white[board.pieces.white.length - 1][2]){\r\n            if (board.pieces.turn == 'black'){\r\n                board.pieces.turn = 'white'\r\n                document.getElementById('whosturn').innerText = \"It is white's turn\";\r\n            }\r\n            else if (board.pieces.turn == 'white'){\r\n                board.pieces.turn = 'black'\r\n                document.getElementById('whosturn').innerText = \"It is black's turn\";  \r\n            }\r\n            console.log(`${board.pieces.turn}'s turn`)\r\n          }\r\n        }\r\n      })\r\n    }, [draw])\r\n    \r\n    return <canvas ref={canvasRef} {...props}/>\r\n}\r\n\r\nexport {Canvas, board};","function emptyBoard(){\r\n\r\n    /* 15x15 grid in memory */\r\n    let grid = [];\r\n    for (let i = 0; i < 15; i++){\r\n        grid.push([])\r\n        for (let j = 0; j < 15; j++){\r\n        grid[i].push(`   `)\r\n        }\r\n    }\r\n\r\n    /* stores clicks and whether they are valid piece placements\r\n    and also tracks whos turn it is */\r\n    return {pieces: {\r\n        black: [],\r\n        white: [],\r\n        turn: 'black'\r\n    },\r\n    grid}\r\n    \r\n};\r\n\r\nexport {emptyBoard};","import React from 'react';\r\nimport $ from 'jquery';\r\nimport './App.css';\r\nimport './style.css';\r\nimport {Canvas, offerDraw} from './canvas.js';\r\n/* import { FiPhoneCall } from 'react-icons/fi';\r\nimport { FiInstagram } from 'react-icons/fi';\r\nimport { FiMail } from 'react-icons/fi'; */\r\nimport './fonts/GreatVibes-Regular.ttf';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\r\n      <head>\r\n\t\t    <title>\r\n\t\t    \tGomoku\r\n\t    \t</title>\r\n\t    </head>\r\n\t    <body>\r\n          {/* */}\r\n\r\n          <div id=\"score\">P1 (black) 0 - 0 (white) P2</div>\r\n          <Canvas width=\"495\" height=\"495\"></Canvas>\r\n          <div id=\"whosturn\">Black's turn to start</div>\r\n          <div><button id='newGame'>NEW GAME</button></div>\r\n          <button id=\"draw\">OFFER DRAW</button>\r\n          <button id=\"resign\">RESIGN</button>\r\n\r\n\r\n          {/* */}\r\n          <script src=\"modal.js\"></script>\r\n\t  </body>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}